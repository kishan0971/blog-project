openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /employee/emp-update:
    put:
      tags:
      - employee-controller
      operationId: updateEmpl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /employee/emp-save:
    post:
      tags:
      - employee-controller
      operationId: insertEmpl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /Financial-survey/save/csv:
    post:
      tags:
      - financial-_survey-_controller
      operationId: save_Financial_survey
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /Financial-code1/save/csv:
    post:
      tags:
      - financial-_code-1_controller
      operationId: save_Financial_survey_1
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /employee/emp-getBySalary:
    get:
      tags:
      - employee-controller
      operationId: getEmployeeBySalary
      parameters:
      - name: salary
        in: query
        required: false
        schema:
          type: number
          format: double
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
  /employee/emp-getByName:
    get:
      tags:
      - employee-controller
      operationId: getEmployeeByName
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
  /employee/emp-getAll:
    get:
      tags:
      - employee-controller
      operationId: getEmpl
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
  /employee/emp-get/{id}:
    get:
      tags:
      - employee-controller
      operationId: getEmpl_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /employee/emp-delete/{id}:
    delete:
      tags:
      - employee-controller
      operationId: deleteEmpl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    EmployeeDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        age:
          type: integer
          format: int32
        salary:
          type: number
          format: double
        joiningDate:
          type: string
          format: date
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        age:
          type: integer
          format: int32
        salary:
          type: number
          format: double
        joiningDate:
          type: string
          format: date
